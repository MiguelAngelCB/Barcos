!function(o){var t={};function e(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return o[r].call(n.exports,n,n.exports,e),n.l=!0,n.exports}e.m=o,e.c=t,e.d=function(o,t,r){e.o(o,t)||Object.defineProperty(o,t,{enumerable:!0,get:r})},e.r=function(o){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},e.t=function(o,t){if(1&t&&(o=e(o)),8&t)return o;if(4&t&&"object"==typeof o&&o&&o.__esModule)return o;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:o}),2&t&&"string"!=typeof o)for(var n in o)e.d(r,n,function(t){return o[t]}.bind(null,n));return r},e.n=function(o){var t=o&&o.__esModule?function(){return o.default}:function(){return o};return e.d(t,"a",t),t},e.o=function(o,t){return Object.prototype.hasOwnProperty.call(o,t)},e.p="",e(e.s=3)}([function(o,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Coordenada=void 0;var r=e(2),n=function(){function o(o,t){this._x=o,this._y=t}return Object.defineProperty(o.prototype,"x",{get:function(){return this._x},set:function(o){this._x=o},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"y",{get:function(){return this._y},set:function(o){this._y=o},enumerable:!1,configurable:!0}),o.prototype.equals=function(o){return this.x==o.x&&this.y==o.y},o.prototype.mover=function(o){o==r.Sentido.abajo?this.bajar():this.avanzar()},o.prototype.bajar=function(){this.y++},o.prototype.avanzar=function(){this.x++},o}();t.Coordenada=n},function(o,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Estado=void 0,function(o){o[o.tocado=0]="tocado",o[o.indemne=1]="indemne",o[o.hundido=2]="hundido"}(t.Estado||(t.Estado={}))},function(o,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Sentido=void 0,function(o){o[o.abajo=0]="abajo",o[o.derecha=1]="derecha"}(t.Sentido||(t.Sentido={}))},function(o,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),(new(e(4).Control)).play()},function(o,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Control=void 0;var r=e(0),n=e(5),a=function(){function o(){this._alto=8,this._ancho=12,this._tablero=new n.Tablero(this._ancho,this._alto)}return o.prototype.play=function(){alert("Bienvenidos al juego de los Barcos");do{alert(this._tablero.mostrarTablero()),this._tablero.comprobarCasilla(this.pedirCoordenada())}while(!this._tablero.comprobarFlotaHundida())},o.prototype.pedirCoordenada=function(){return new r.Coordenada(this.solicitarPuntoCoordenada(this._tablero.alto,"Y"),this.solicitarPuntoCoordenada(this._tablero.ancho,"X"))},o.prototype.solicitarPuntoCoordenada=function(o,t){do{var e=prompt("Dame un punto del eje "+t);e.match("\\d+")?e-=1:e=0}while(!this.comprobarCoordenada(e,o));return e},o.prototype.comprobarCoordenada=function(o,t){return o>=0&&o<t},o}();t.Control=a},function(o,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Tablero=void 0;var r=e(1),n=e(6),a=function(){function o(o,t){this._casillas=new Array,this._ancho=o,this._alto=t,this._flota=new n.Flota(o,t),this.createTablero(this._ancho,this._alto),this.colocarFlota()}return o.prototype.createTablero=function(o,t){for(var e=0;e<t;e++)this._casillas[e]=new Array(this._ancho)},o.prototype.colocarFlota=function(){for(var o=0;o<this._flota.barcos.length;o++)for(var t=0;t<this._flota.barcos[o].posiciones.length;t++)this.addBarco(this._flota.barcos[o].posiciones[t].coordenada,this._flota.barcos[o].posiciones[t])},o.prototype.addBarco=function(o,t){this._casillas[o.x][o.y]=t},o.prototype.comprobarFlotaHundida=function(){return this._flota.comprobarBarcosHundidos()==this._flota.barcos.length},o.prototype.mostrarTablero=function(){var o="";o+="    ";for(var t=0;t<this._ancho;t++)o+=t+1+"  |  ";o+="\n",o+="    _________________________________________________________",o+="\n";for(t=0;t<this._alto;t++){o+=t+1+"  |   ";for(var e=0;e<this._ancho;e++)null!=this._casillas[t][e]?o+=this.mostrarCasilla(this._casillas[t][e]):o+="X  |  ";o+="____________________________________________________________",o+="\n"}return o},o.prototype.mostrarCasilla=function(o){return"A"==o?"A  |  ":o.estado==r.Estado.indemne?"X  |  ":o.estado==r.Estado.tocado?"T  |  ":"H  |  "},o.prototype.comprobarCasilla=function(o){null==this._casillas[o.x][o.y]?(this._casillas[o.x][o.y]="A",alert("Agua")):this._casillas[o.x][o.y].estado==r.Estado.indemne&&(this._casillas[o.x][o.y].estado=r.Estado.tocado,alert("Tocado"))},Object.defineProperty(o.prototype,"casillas",{get:function(){return this._casillas},enumerable:!1,configurable:!0}),o.prototype.getCasilla=function(o){return this._casillas[o.x][o.y]},Object.defineProperty(o.prototype,"alto",{get:function(){return this._alto},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"ancho",{get:function(){return this._ancho},enumerable:!1,configurable:!0}),o}();t.Tablero=a},function(o,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Flota=void 0;var r=e(1),n=e(7),a=function(){function o(o,t){this._barcos=[],this._generadorFlota=new n.GeneradorFlota(o,t,this._barcos),this.crearFlota()}return o.prototype.crearFlota=function(){for(var o=[2,2,2,2,3,3,3,4,4],t=0;t<o.length;t++){var e=this._generadorFlota.crearBarco(o[t]);this._barcos[t]=e}},o.prototype.comprobarBarcosHundidos=function(){for(var o=0,t=0,e=0;e<this._barcos.length;e++){o=0;for(var n=0;n<this.barcoPosiciones(e).length;n++)this._barcos[e].posiciones[n].estado==r.Estado.tocado&&o++,o==this.barcoPosiciones(e).length&&(this.hundirBarco(this.barcos[e]),t++)}return t},o.prototype.barcoPosiciones=function(o){return this._barcos[o].posiciones},o.prototype.hundirBarco=function(o){for(var t=0;t<o.posiciones.length;t++)o.posiciones[t].estado=r.Estado.hundido;alert("Hundido")},Object.defineProperty(o.prototype,"barcos",{get:function(){return this._barcos},enumerable:!1,configurable:!0}),o}();t.Flota=a},function(o,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GeneradorFlota=void 0;var r=e(8),n=e(2),a=e(0),i=function(){function o(o,t,e){this.ancho=o,this.alto=t,this._flota=e}return o.prototype.crearBarco=function(o){do{var t=this.obtenerSentidoAleatorio(),e=this.coordenadaVacia(o,t),n=new r.Barco(o,e,t)}while(this.comprobarSolapamiento(n));return n},o.prototype.comprobarSolapamiento=function(o){for(var t=0;t<this._flota.length;t++)if(o.compruebaSolapamiento(this._flota[t].posiciones))return!0;return!1},o.prototype.coordenadaVacia=function(o,t){do{var e=this.getRandom(0,this.alto),r=this.getRandom(0,this.ancho),n=new a.Coordenada(e,r)}while(this.salidaLimites(n,o,t));return n},o.prototype.salidaLimites=function(o,t,e){var r=!1;return e==n.Sentido.derecha?t+o.x>this.alto&&(r=!0):t+o.y>this.ancho&&(r=!0),r},o.prototype.obtenerSentidoAleatorio=function(){var o;return o=n.Sentido.abajo,1==this.getRandom(0,1)&&(o=n.Sentido.derecha),o},o.prototype.getRandom=function(o,t){return Math.floor(Math.random()*(o-t)+t)},o}();t.GeneradorFlota=i},function(o,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Barco=void 0;var r=e(1),n=e(0),a=e(9),i=function(){function o(o,t,e){this._size=o,this._posiciones=[],this.crearBarco(t,e)}return o.prototype.crearBarco=function(o,t){for(var e=0;e<this.size;e++)this.posiciones.push(new a.Casilla(new n.Coordenada(o.x,o.y),r.Estado.indemne)),o.mover(t)},o.prototype.compruebaSolapamiento=function(o){for(var t=0;t<o.length;t++)for(var e=0;e<this.posiciones.length;e++)if(this.posiciones[e].coordenada.equals(o[t].coordenada))return!0;return!1},Object.defineProperty(o.prototype,"size",{get:function(){return this._size},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"posiciones",{get:function(){return this._posiciones},enumerable:!1,configurable:!0}),o}();t.Barco=i},function(o,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Casilla=void 0;var r=function(){function o(o,t){this._coordenada=o,this._estado=t}return Object.defineProperty(o.prototype,"coordenada",{get:function(){return this._coordenada},set:function(o){this._coordenada=o},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"estado",{get:function(){return this._estado},set:function(o){this._estado=o},enumerable:!1,configurable:!0}),o}();t.Casilla=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,